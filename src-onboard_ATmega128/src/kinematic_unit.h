/*
 * kinematic_unit.h
 *
 *  Created on: 23 февр. 2017 г.
 *      Author: RaKetov
 */

/*
 * МОДУЛЬ, ОТВЕЧАЮЩИЙ ЗА ОПРЕДЕЛЕНИЕ
 * ПОЛОЖЕНИЯ И ОРИНЕТАЦИИ АППАРАТА
 * В ПРОСТРАНСТВЕ
 * */
#ifndef KINEMATIC_UNIT_H_
#define KINEMATIC_UNIT_H_

//давление на земле
//TODO: задать
#define ZERO_PRESSURE 1



/*=================================================================================*/
/*===============================ОПИСАНИЕ=СТРУКТУР=================================*/
/*=================================================================================*/
//СТРУКТУРА КИНЕМАТИЧЕСКОГО СОСТОЯНИЯ АППАРАТА
typedef struct
{

	float aRelatedXYZ[3];	//ускорения в единицах g (в ССК)
	float gRelatedXYZ[3];	//угловые скорости в degps (в ССК)
	float cRelatedXYZ[3];	//косинусы углов вектора магнитного поля с осями ССК
	float pressure;

	float aX; float aY; float aZ;		//ускорения в м/с^2 (ИСК)
	float vX; float vY; float vZ;		//скорости в м/с (ИСК)
	float sX; float sY; float sZ;		//перемещения в м (ИСК)
	float wX; float wY; float wZ;		//угловые скорости в 1/с (ИСК)

	//Матрица поворота ССК относительно ИСК
	float fXX1; float fXY1; float fXZ1;	//косинусы углов оси Х ИСК с осями ССК
	float fYX1; float fYY1; float fYZ1;	//косинусы углов оси Y ИСК с осями ССК
	float fZX1; float fZY1; float fZZ1;	//косинусы углов оси Z ИСК с осями ССК

	uint32_t Time;

}state;


//Матрица поворота
typedef struct
{
	float fXX1; float fXY1; float fXZ1;	//косинусы углов оси Х ИСК с осями ССК
	float fYX1; float fYY1; float fYZ1;	//косинусы углов оси Y ИСК с осями ССК
	float fZX1; float fZY1; float fZZ1;	//косинусы углов оси Z ИСК с осями ССК

}rotation_matrix;

//Матрица направляющих косинусов вектора магнитного поля с осями ИСК (XYZ)
typedef struct
{
	float fBX;
	float fBY;
	float fBZ;

}magnetic_direction;

//Матрица косинусов углов для корректировки ИСК
/* Данная матрица заполняется непосредственно перед стартом
 * (считаются косинусы углов между вектором g и его проекциями на оси XYZ)*/
typedef struct
{
	float fOFFSET_X;
	float fOFFSET_Y;
	float fOFFSET_Z;
}isc_offset;

//Необработанные данные для передачи по радиоканалу
typedef struct
{
	int16_t aTransmitXYZ[3];
	int16_t gTransmitXYZ[3];
	int16_t cTransmitXYZ[3];

}transmit_data;
/*=================================================================================*/
/*=================================================================================*/

//КИНЕМАИТЧЕСКОЕ СОСТОЯНИЕ АППАРАТА
extern state STATE;

extern transmit_data TRANSMIT_DATA;

extern magnetic_direction MAGN_DIR;

extern isc_offset ISC_OFFSET;


/*=================================================================================*/
/*===============================ОПИСАНИЕ=ФУНКЦИЙ==================================*/
/*=================================================================================*/
//ИНИЦИАЛИЗИРУЕТ ПРОГРАММУ КИНЕМАТИЧЕСКОГО СОСТОЯНИЯ АППАРАТА, А ТАК ЖЕ ДРАЙВЕРЫ ВНЕШНИХ УСТРОЙСТВ
void kinematicInit();

//УСТАНОВКА ИСК (запись поправочных направляющих косинусов)
void set_ISC_offset();

//ЗАПИСЬ МАТРИЦЫ НАПРАВЛЯЮЩИХ КОСИНУСОВ ВЕКТОРА МАГНИТНОГО ПОЛЯ С ОСЯМИ ИСК
void set_magn_dir();

//РАССЧИТЫВАЕТ ТЕКУЩЕЕ СОСТОЯНИЕ АППАРАТА
void recon_AGC_STATE_TRANSMIT_DATA();

//ОПРЕДЕЛЯЕТ ВЫСОТУ ПО ДАВЛЕНИЮ
void calculate_height();

//РАССЧИТЫВАЕТ МАТРИЦУ ПОВОРОТА, УГЛОВЫЕ СКОРОСТИ, СКОРОСТИ, УСКОРЕНИЯ И ПЕРЕМЕЩЕНИЯ В ИСК И ЗАПИСЫВАЕТ ИХ В STATE
void trajectoryConstruction();


//ПЕРЕДАЕТ ПЕРЕМЕЩЕНИЯ АППАРАТА В ИСК
//ПАРАМЕТР:		* translations - ссылка на массив[3], в который будут записаны перемещения аппарата по осям X, Y и Z соответственно (м)
void getTranslations (float * translations);

//ПЕРЕДАЕТ УГЛОВЫЕ СКОРОСТИ АППАРАТА В ИСК
//ПАРАМЕТР:		* angVelocityX - ссылка на массив[3], в который будут записаны угловые скорости аппарата вокруг осей X, Y и Z соответственно (рад/с)
void getAngVelocity (float * angVelocity);

//ПЕРЕДАЕТ МАТРИЦУ ПОВОРОТА АППАРАТА
//ПАРАМЕТР:		* RotationMatrix - ссылка на массив[9], в который будут записаны косинусы углов поворота ССК относительно ИСК (-)
void getRotationMatrix (float * RotationMatrix);



#endif /* KINEMATIC_UNIT_H_ */
